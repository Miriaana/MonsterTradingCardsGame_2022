Protocol for MTCGame 						(Stand 28.02.2023, 23:00)
_____________________________________________________________________
Design:
	DB Tables: 'mtcgdb sql statements.txt'
		ended up not using user.deck and decks at all
		all cards with respective ownerids and states(stack/deck/etc) are saved to one table
	VS-Solution:
		MTCGame.server
			includes executable
			.HTTP
			.MTCG
				holds all endpoints
		MTCGame.BL
			includes the to the endpoints corresponding handlers; handlers format data and connect to DAL
			includes battlehandling with lobby, game and logs
		MTCGame.DAL
			one class to handle db
		MTCGame.Model
			only actually uses User, Package and Card
		MTCGame.Test
			holds all Unit Tests
		MTCGame and MTCGame.Client not used
_____________________________________________________________________
Lessons Learned:
	break up big projects into small goals and even smaller bullet points on a todo list to work at over time, they become far easier to manage and far less daunting
		(it also becomes easier to pick a project back up after some time if the completed parts and future todos are noted)
_____________________________________________________________________
Unit Tests:
	With the Unit Tests for Card.Attack() and Card.IsEffectiveAgainst() I went for a more test-driven approach by implementing the unit-tests beforehand to help in correctly implementing these methods
	most unit tests however were simply chosen and implemented afterwards for their relative ease of implementation with the time restraints of the project in mind
_____________________________________________________________________
Unique Feature:
	No specific unique feature implemented
_____________________________________________________________________
Time Spent: ~ 70 hours (estimated 75% done)
_____________________________________________________________________
Github: https://github.com/Miriaana/MonsterTradingCardsGame_2022
_____________________________________________________________________